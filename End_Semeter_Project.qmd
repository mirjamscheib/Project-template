---
title: "Semester_Project"
format: html
execute: 
  eval: true
---

# TO DOS 
threshold trip duration & rain 
Map visualization schön mache
evt. removal of transport modes in pre pro 
Boxplots vereinheitlichen 

# Introduction 
It is known that several factors influence spatio-temporal movement of people. Like weather (Quelle), day of the week (quelle) and time of the day (quelle). 

## Packages 
```{r}
# clear space 
rm(list=ls())

# load packages 
library("readr")
library("dplyr")
library("ggplot2")
library("sf")
library("terra")
library("tmap")
library("gitcreds")
library("dplyr")
library("SimilarityMeasures")
library("lubridate")
library("plotly")

```

# Research Questions 
## Question 1: Miriam 
Does the day of the week (weekend vs. workday) have an impact on spatio-temporal movement patterns?
### Spatial Analysis
#### Load cleaned data
```{r}
# load clean data 
posmo <- read_delim("posmo_data/posmo_trips.csv")
```

#### Segmentierte Daten nehmen - Speed & Distance
- thought: How about removing certain transport modes (funicular, horse, Other?)
```{r}
# choose travelmodes which make sense (other and funicula excluding)
posmo <- posmo |>
  subset(transport_mode != "Other1" & transport_mode != "Funicular")

# check if subsetting worked 
unique(posmo$transport_mode)

# Boxplot compare weekend/ weekday without grouping (overall steplength)
ggplot(posmo, aes(transport_mode, log(steplength), fill = day_week)) +
  geom_boxplot() +
  labs(title = "Travelled Distance per Transport Mode", subtitle = "Comparing Weekend vs. Weekday", fill = "Day of the Week") +
  ylab("Log Steplength [m]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("weekday" = "lavenderblush3", "weekend" = "aquamarine3"), labels = c( "Weekday", "Weekend")) +
  theme_minimal()


# Boxplot compare weekend/ weekday without grouping (overall speed)
ggplot(posmo, aes(transport_mode, log(speed), fill = day_week)) +
  geom_boxplot() +
  labs(title = "Speed per Transport Mode", subtitle = "Comparing Weekend vs. Weekday", fill = "Day of the Week") +
  ylab("Log Speed [m/s]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("weekday" = "lavenderblush3", "weekend" = "aquamarine3"), labels = c( "Weekday", "Weekend")) +
  theme_minimal()

# Table Summary 
question1_summary <- posmo |> 
  group_by(day_week, transport_mode) |> 
  summarise(steplength_mean = mean(steplength, na.rm = T),
            speed_mean = mean(speed, na.rm = T)) |> 
  mutate(percentage_steplength = steplength_mean/sum(steplength_mean)*100,
         percentage_speed = speed_mean/sum(speed_mean)*100)
```

### Temporal Analysis 
#### Load trips data 
```{r}
# load clean trips data 
posmo <- read_delim("posmo_data/posmo_trips.csv")
```

#### Duration 
Mean duration of trips compared between Weekend vs. Weekday
```{r}
# choose travelmodes which make sense (other and fu)
posmo <- posmo |>
  subset(transport_mode != "Other1" & transport_mode != "Funicular")

# check if subsetting worked 
unique(posmo$transport_mode)

# Calculate mean duration and mean dis of trips per day
# mean trip duration looks odd, need to check that (!!)
ggplot() +
  geom_boxplot(data = posmo, aes(transport_mode, trip_duration/60, fill =
                                         day_week)) +
   labs(title = "Trip Duration per Transport Mode", subtitle = "Comparing Weekend vs. Weekday", fill = "Day of the Week") +
  ylab("Duration [min]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("weekday" = "lavenderblush3", "weekend" = "aquamarine3"), labels = c( "Weekday", "Weekend")) +
  theme_minimal()

#log(trip_duration/60) glaube ich nicht nötig

#mean trip distance compared between weekend/weekday seems OK
  ggplot() +
  geom_boxplot(data = posmo, aes(day_week, log(trip_dis), fill = day_week)) +
  labs(title = "Trip Distance per Transport Mode", subtitle = "Comparing Weekend vs. Weekday", fill = "Day of the Week") +
  ylab("Log Distance [m]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("weekday" = "lavenderblush3", "weekend" = "aquamarine3"), labels = c( "Weekday", "Weekend")) +
    facet_wrap(~transport_mode, nrow = 1) +
    theme_minimal()
```

### Layout anpassen- Create Visual Maps 
```{r}
# transform posmo data into an sf object 
posmo <- st_as_sf(posmo, coords = c("X","Y"), crs = 2056) 


# 1. add grouping variable to the sf object
posmo_grouped <- group_by(posmo, dataset)


# 2. use summarise() to "dissolve" all point into a multipoint object
posmo_smry <- summarise(posmo_grouped)

# 3. run st_convex_hull()
mcp_posmo <- st_convex_hull(posmo_smry)
```

```{r}
tmap_mode("view")

# segmented visualisation 
tm_shape(mcp_posmo) +
  tm_fill(col = "dataset", alpha = 0.4) +
  tm_legend(title = "User") +
  tm_shape(mcp_posmo) +
  tm_borders(col = "red") +
  tm_shape(posmo) +
  tm_dots(col = "day_week") 
```

## Question 2: Miriam
Durchschnittliche Reisestrecke pro Tageszeit, gibt es Tageszeiten zu denen man eher längere/kürzere Strecken reist?  
Durchschnittliche Anzahl Reisen pro Tag? 

### Analysis
#### Load cleaned data 
```{r}
# load clean data 
posmo <- read_delim("posmo_data/posmo_trips.csv")
```

#### Legende anschreiben - Analysis with segmented posmo data 
```{r}
# jetzt das noch mit segmentierten Daten 
# round datetime to 1h 
posmo_round <- posmo |>
  mutate(hour = lubridate::hour(datetime))

# create dataframe, which calculates mean steplength, speed per hour over all dates
# here with weekdays 
posmo_hour <- posmo_round |>
  group_by(hour, weekday) |>
  summarise(mean_dis = mean(steplength, na.rm = TRUE),
            mean_speed = mean(speed, na.rm = TRUE), 
            mean_duration = mean(trip_duration, na.rm = TRUE)) 

# mo-so with distance (steplength) travelled
ggplot(posmo_hour, aes(hour, mean_dis, col = weekday)) +
  geom_point() +
   geom_line(lwd = 0.7) +
  labs(title = "Mean Tavelled Distance over 24h", subtitle = "Compared from Monday to Sunday", color = "Day of the Week") +
  ylab("Mean Distance [m]") +
  xlab("Hour") +
  theme_minimal()

# mo-so with speed 
ggplot(posmo_hour, aes(hour, mean_speed, col = weekday)) +
  geom_point() +
  geom_line(lwd = 0.7) +
  labs(title = "Mean Speed over 24h", subtitle = "Compared from Monday to Sunday", color = "Day of the Week") +
  ylab("Mean Speed [m/s]") +
  xlab("Hour") +
  theme_minimal()

# mo-so with trip duration  
ggplot(posmo_hour, aes(hour, mean_duration/60, col = weekday)) +
  geom_point() +
  geom_line(lwd = 0.7) +
  labs(title = "Mean Trip Duration over 24h", subtitle = "Compared from Monday to Sunday", color = "Day of the Week") +
  ylab("Mean Duration [min]") +
  xlab("Hour") +
  theme_minimal()


# create dataframe, which calculates mean steplength, speed per hour over all dates
# here with days of the week (weekend vs. weekday)
posmo_day <- posmo_round |>
  group_by(hour, day_week)|>
  summarise(mean_dis = mean(steplength, na.rm = TRUE),
            mean_speed = mean(speed, na.rm = TRUE),
            mean_duration = mean(trip_duration, na.rm = TRUE)) 

# weekend vs. weekday with distance (steplength) travelled
ggplot(posmo_day, aes(hour, mean_dis, col = day_week)) +
  geom_point() +
  geom_line(lwd = 0.7) +
  labs(title = "Mean Tavelled Distance over 24h", subtitle = "Compared between Weekend vs. Weekday", color = "Weekend vs. Weekday") +
  ylab("Mean Distance [m]") +
  xlab("Hour") +
  theme_minimal()

# weekend vs. weekday with speed
ggplot(posmo_day, aes(hour, mean_speed, col = day_week)) +
  geom_point() +
  geom_line(lwd = 0.7) +
  labs(title = "Mean Speed over 24h", subtitle = "Compared between Weekend vs. Weekday", color = "Weekend vs. Weekday") +
  ylab("Mean Speed [m/s]") +
  xlab("Hour") +
  theme_minimal()

# weekend vs. weekday with trip duration 
ggplot(posmo_day, aes(hour, mean_duration/60, col = day_week)) +
  geom_point() +
    geom_line(lwd = 0.7) +
  labs(title = "Mean Trip Duration over 24h", subtitle = "Compared between Weekend vs. Weekday", color = "Weekend vs. Weekday") +
  ylab("Mean Duration [min]") +
  xlab("Hour") +
  scale_color_manual(values = c("weekday" = "lavenderblush3", "weekend" = "aquamarine3", labels = c("Weekday", "Weekend"))) +
  theme_minimal()
```


## Question 3: Mirjam 
Does the weather condition (e.g. rain, sunshine) impact spatio-temporal patterns of students by foot and/or bicycle?
- spatial: movement pattern (duration, distance, velocity)
- temporal: mean distance per weekend-day or workday-day
2. Unterscheiden zwischen regentaugliche, regenuntaugliche Transport modes (Fragestellung anpassen zu regentauglich, nicht regentauglich)

### Spatial Analysis 
#### Load cleaned data 
```{r}
# load clean data 
posmo <- read_delim("posmo_data/posmo_trips.csv")
```

#### Speed & Distance 
```{r}
# choose travelmodes which make sense (other and funicula excluding)
posmo <- posmo |>
  subset(transport_mode != "Other1" & transport_mode != "Funicular")

# check if subsetting worked 
unique(posmo$transport_mode)

# Boxplot compare rain/ no rain without grouping (overall steplength)
ggplot(posmo, aes(transport_mode, log(steplength), fill = rain_day)) +
  geom_boxplot() +
  labs(title = "Travelled Distance per Transport Mode", subtitle = "Comparing Rainy vs. Dry Days", fill = "Rain vs. Dry") +
  ylab("Log Steplength [m]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("no_rain" = "lavenderblush3", "rain" = "aquamarine3"), labels = c( "Dry", "Rain")) +
  theme_minimal()


# Boxplot compare rain/ no rain without grouping (overall speed)
ggplot(posmo, aes(transport_mode, log(speed), fill = rain_day)) +
  geom_boxplot() +
   labs(title = "Speed per Transport Mode", subtitle = "Comparing Rainy vs. Dry Days", fill = "Rain vs. Dry") +
  ylab("Log Speed [m/s]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("no_rain" = "lavenderblush3", "rain" = "aquamarine3"), labels = c( "Dry", "Rain")) +
  theme_minimal()

# Table Summary 
question2_summary <- posmo |> 
  group_by(rain_day, transport_mode) |> 
  summarise(steplength_mean = mean(steplength, na.rm = T),
            speed_mean = mean(speed, na.rm = T)) |> 
  mutate(percentage_steplength = steplength_mean/sum(steplength_mean)*100,
         percentage_speed = speed_mean/sum(speed_mean)*100)
```

### Temporal Analysis 
#### Load trips data 
```{r}
# load clean trips data 
posmo <- read_delim("posmo_data/posmo_trips.csv")
```

#### Duration 
Mean duration of trips compared between Rain and Dry Days
```{r}
# choose travelmodes which make sense (other and funicula excluding)
posmo <- posmo |>
  subset(transport_mode != "Other1" & transport_mode != "Funicular")

# check if subsetting worked 
unique(posmo$transport_mode)

# Calculate mean duration and mean dis of trips per day
# mean trip duration looks odd, need to check that (!!)
ggplot() +
  geom_boxplot(data = posmo, aes(transport_mode, trip_duration/60, fill = rain_day)) +
  labs(title = "Travelled Distance per Transport Mode", subtitle = "Comparing Rainy vs. Dry Days", fill = "Rain vs. Dry") +
  ylab("Duration [min]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("no_rain" = "lavenderblush3", "rain" = "aquamarine3"), labels = c( "Dry", "Rain")) +
  theme_minimal()

# mean trip distance compared between rain/no rain
ggplot() +
  geom_boxplot(data = posmo, aes(transport_mode, log(trip_dis), fill = rain_day)) +
    labs(title = "Speed per Transport Mode", subtitle = "Comparing Rainy vs. Dry Days", fill = "Rain vs. Dry") +
  ylab("Log Distance [m]") +
  xlab("Transport Mode") +
  scale_fill_manual(values = c("no_rain" = "lavenderblush3", "rain" = "aquamarine3"), labels = c( "Dry", "Rain")) +
  theme_minimal()
```

### Legende anschreiben - Create Visual Maps 
```{r}
# transform posmo data into an sf object 
posmo <- st_as_sf(posmo, coords = c("X","Y"), crs = 2056) 


# 1. add grouping variable to the sf object
posmo_grouped <- group_by(posmo, dataset)

# 2. use summarise() to "dissolve" all point into a multipoint object
posmo_smry <- summarise(posmo_grouped)

# 3. run st_convex_hull()
mcp_posmo <- st_convex_hull(posmo_smry)
```

```{r}
tmap_mode("view")

# segmented visualisation 
tm_shape(mcp_posmo) +
  tm_fill(col = "dataset", alpha = 0.4) +
  tm_shape(mcp_posmo) +
  tm_borders(col = "red") +
  tm_shape(posmo) +
  tm_dots(col = "rain_day") 
```


# Project Text 
1. Zeichenzählung einfügen (DONE)
2. Paper in Vorlesungsfolien (Zotero zitieren in Word)


